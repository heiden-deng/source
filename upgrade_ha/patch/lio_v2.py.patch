--- /usr.old/lib/python2.7/site-packages/cinder/volume/targets/lio.py	2016-09-19 14:51:46.453709489 +0800
+++ /usr/lib/python2.7/site-packages/cinder/volume/targets/lio.py	2016-09-19 14:48:46.384749273 +0800
@@ -17,7 +17,8 @@
 from cinder.i18n import _LE, _LI, _LW
 from cinder import utils
 from cinder.volume.targets import iscsi
-
+import os
+import shutil
 
 LOG = logging.getLogger(__name__)
 
@@ -74,6 +75,12 @@
 
         return None
 
+    def _get_targets(self):
+        (out, err) = self._execute('cinder-rtstool',
+                                   'get-targets',
+                                   run_as_root=True)
+        return out
+
     def _get_iscsi_target(self, context, vol_id):
         return 0
 
@@ -85,7 +92,14 @@
     def _persist_configuration(self, vol_id):
         try:
             self._execute('cinder-rtstool', 'save', run_as_root=True)
-
+            try:
+                #self._execute('cinder-rtstool', 'save', '/var/lib/cinder/bocloud/saveconfig.json', run_as_root=True)
+                if os.path.isfile("/etc/target/saveconfig.json"):
+                    shutil.copy("/etc/target/saveconfig.json","/var/lib/glance/") 
+            except (OSError, IOError) as exc:
+                LOG.warning(_LW("Failed to copy to /var/lib/glance "))
+            except putils.ProcessExecutionError:
+                LOG.warning(_LW("Failed to save iscsi LIO configuration to /var/lib/glance "))
         # On persistence failure we don't raise an exception, as target has
         # been successfully created.
         except putils.ProcessExecutionError:
@@ -93,6 +107,15 @@
                             "modifying volume id: %(vol_id)s."),
                         {'vol_id': vol_id})
 
+    def _restore_configuration(self):
+        try:
+            self._execute('cinder-rtstool', 'restore', run_as_root=True)
+
+        # On persistence failure we don't raise an exception, as target has
+        # been successfully created.
+        except putils.ProcessExecutionError:
+            LOG.warning(_LW("Failed to restore iscsi LIO configuration."))
+
     def create_iscsi_target(self, name, tid, lun, path,
                             chap_auth=None, **kwargs):
         # tid and lun are not used
@@ -199,3 +222,15 @@
 
         # We make changes persistent
         self._persist_configuration(volume['id'])
+
+    def ensure_export(self, context, volume, volume_path):
+        """Recreate exports for logical volumes."""
+
+        # Restore saved configuration file if no target exists.
+        if not self._get_targets():
+            LOG.info(_LI('Restoring iSCSI target from configuration file'))
+            self._restore_configuration()
+            return
+
+        LOG.info(_LI("Skipping ensure_export. Found existing iSCSI target."))
+
